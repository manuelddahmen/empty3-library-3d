macro=#
instruction_block.start={
instruction_block.end=}
array_def_dimension.start=[
array_def_dimension.end=]
array_index_start=[
array_index.end=]
array_def_extension.start={
array_def_extension.end=}
method_arguments.start=(
method_arguments.end=)
method_argument.separator=,
class_def.start={
class_def.end=}
string.start="
string.end="
string.espace_char=\\
operation_group.start=(
operation_group.end=)
operation_add=+
operation_minus=-
operation_mult=*
operation_div=/
operation_lg=<
operation_gt=>
operation_leg=<=
operation_get=>=
operation_eq===
assignement==
instruction.end=;
object_method_call=.
self_object_call_explicit=this
self_object_call_implicit=
method_invoke.start=(
method_invoke.end=)
char.start='
char.end='
operator_or=|
operation_and=&
operation_cond_or=||
operation_cond_and=&&
operation_notequals=!=
operation_negation=!
operators_priorities=
